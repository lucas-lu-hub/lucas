#include<stdio.h>

int main()
{
	FILE *fpIn = fopen("Test.c", "r");
	if(NULL == fpIn)
	{
		printf("Open Test.c Error.\n");
		return -1;
	}
	FILE *fpOut = fopen("Test4.txt", "w");
	if(NULL == fpOut)
	{
		fclose(fpIn);
		printf("Open Test4.txt Error.\n");
		return -1;
	}

	//Copy
	while(!feof(fpIn))
	{
		char ch = fgetc(fpIn);
		fputc(ch, fpOut);
	}

	fclose(fpIn);
	fclose(fpOut);
	return 0;
}

/*
int main()
{
	FILE * pFile;
	long size;
	pFile = fopen("Test2.txt", "r");
	if (pFile == NULL) 
		perror("Error opening file");
	else
	{
		fseek(pFile, 0, SEEK_END); // non-portable
		size = ftell(pFile);
		fclose(pFile);
		printf("Size of myfile.txt: %ld bytes.\n", size);
	}
	return 0;
}

/*
void main()
{
	FILE *fp = fopen("Test.txt", "r");  
	if(NULL == fp)
	{
		printf("Open File Failed.\n");
		return;
	}

	int pos = ftell(fp);
	printf("pos = %d\n", pos);
	char ch = fgetc(fp);
	printf("ch = %c\n", ch);
	ch = fgetc(fp);
	printf("ch = %c\n", ch);
	pos = ftell(fp);
	printf("pos = %d\n", pos);

	rewind(fp);
	pos = ftell(fp);
	printf("pos = %d\n", pos);

	ch = fgetc(fp);
	printf("ch = %c\n", ch);

	//
	fseek(fp, 10 ,SEEK_SET);
	ch = fgetc(fp);
	printf("ch = %c\n", ch);

	//
	fseek(fp, -4 ,SEEK_CUR);
	ch = fgetc(fp);
	printf("ch = %c\n", ch);

	//
	fseek(fp, -3 ,SEEK_END);
	ch = fgetc(fp);
	printf("ch = %c\n", ch);
	fclose(fp);
}

/*
int main()
{
	FILE *fpIn = fopen("Test.c", "r");
	if(NULL == fpIn)
	{
		printf("Open Test.c Error.\n");
		return -1;
	}
	FILE *fpOut = fopen("Test3.txt", "w");
	if(NULL == fpOut)
	{
		fclose(fpIn);
		printf("Open Test3.txt Error.\n");
		return -1;
	}

	//Copy
	char buf[128] = {0};
	char *res = fgets(buf, 128, fpIn);
	while(res != NULL)
	{
		fputs(buf, fpOut);
		memset(buf, 0, 128);
		res = fgets(buf, 128, fpIn);
	}

	fclose(fpIn);
	fclose(fpOut);
	return 0;
}

/*
int main()
{
	FILE *fpIn = fopen("Test.c", "r");
	if(NULL == fpIn)
	{
		printf("Open Test.c Error.\n");
		return -1;
	}
	FILE *fpOut = fopen("Test2.txt", "w");
	if(NULL == fpOut)
	{
		fclose(fpIn);
		printf("Open Test2.txt Error.\n");
		return -1;
	}

	//Copy
	char ch = fgetc(fpIn);
	while(ch != EOF)
	{
		fputc(ch, fpOut);
		ch = fgetc(fpIn);
	}

	fclose(fpIn);
	fclose(fpOut);
	return 0;
}

/*
void main()
{
	int ar[10] = {0};

	FILE *fp = fopen("Test1.txt", "rb");  
	if(NULL == fp)
	{
		printf("Open File Failed.\n");
		return;
	}

	fread(ar, sizeof(int), 10, fp);

	fclose(fp);
}

/*
void main()
{
	int ar[] = {12,23,34,45,56,67,78,89,90,100};
	int n = sizeof(ar) / sizeof(ar[0]);

	FILE *fp = fopen("Test1.txt", "wb");  
	if(NULL == fp)
	{
		printf("Open File Failed.\n");
		return;
	}

	fwrite(ar, sizeof(int), n, fp);

	fclose(fp);
}

/*
void main()
{
	int ar[] = {12,23,34,45,56,67,78,89,90,100};
	int n = sizeof(ar) / sizeof(ar[0]);

	FILE *fp = fopen("Test.txt", "a");
	if(NULL == fp)
	{
		printf("Open File Failed.\n");
		return;
	}

	for(int i=0; i<n; ++i)
		fprintf(fp, "%d ", ar[i]); //ÖØ¶¨Ïò

	fclose(fp);
}

/*
void main()
{
	int ar[10] = {0};
	FILE *fp = fopen("Test.txt", "r");
	if(NULL == fp)
	{
		printf("Open File Failed.\n");
		return;
	}

	for(int i=0; i<10; ++i)
	{
		//scanf("%d", &ar[i]); //±ê×¼ÊäÈë ¼üÅÌ
		fscanf(fp, "%d", &ar[i]);
	}

	fclose(fp);
}

/*
void main()
{
	int ar[] = {12,23,34,45,56,67,78,89,90,100};
	int n = sizeof(ar) / sizeof(ar[0]);

	FILE *fp = fopen("Test.txt", "w");
	if(NULL == fp)
	{
		printf("Open File Failed.\n");
		return;
	}

	for(int i=0; i<n; ++i)
		fprintf(fp, "%d ", ar[i]); //ÖØ¶¨Ïò

	fclose(fp);
}

/*
void main()
{
	int ar[] = {12,23,34,45,56,67,78,89,90,100};
	int n = sizeof(ar) / sizeof(ar[0]);

	FILE *fp = NULL; //ÎÄ¼þ
	fp = fopen("Test.txt", "w");
	//fp = fopen("C:\\Bit\\Test.txt", "w");
	//fp = fopen("..\Test.txt", "w");
	if(NULL == fp)
	{
		printf("Open File Failed.\n");
		return;
	}

	for(int i=0; i<n; ++i)
	{
		//printf("%d ", ar[i]);    //±ê×¼Êä³ö -> ÆÁÄ»  
		fprintf(fp, "%d ", ar[i]); //ÖØ¶¨Ïò
	}
	//printf("\n");

	fclose(fp);
}
*/ÿ